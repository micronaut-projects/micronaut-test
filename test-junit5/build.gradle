plugins {
    id "io.micronaut.build.internal.micronaut-test-module"
    id 'io.micronaut.graalvm' // Required to configure Graal for nativeTest
}

tasks.withType(Test).configureEach {
    jvmArgs '-Duser.country=US'
    jvmArgs '-Duser.language=en'

    reports.html.required = !System.getenv("GITHUB_ACTION")
    reports.junitXml.required = true

    useJUnitPlatform()
}

configurations {
    nativeImageTestClasspath {
        exclude(group: 'org.apache.groovy')
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

tasks.withType(Jar).configureEach {
    manifest {
        attributes('Automatic-Module-Name': "${project.group}.${project.name}".replaceAll('[^\\w\\.\\$_]', "_"))
        attributes('Implementation-Version': project.findProperty("projectVersion"))
        attributes('Implementation-Title': project.findProperty("title"))
    }
}

dependencies {
    api projects.micronautTestCore
    api(mn.micronaut.inject)
    api(libs.junit.jupiter.api)
    implementation(mn.micronaut.context)
    compileOnly(libs.graal.svm)

    testCompileOnly(mn.micronaut.inject)

    testAnnotationProcessor(mn.micronaut.inject.java)
    testAnnotationProcessor(mn.micronaut.graal)

    testImplementation(libs.junit.jupiter.params)
    testImplementation(mn.micronaut.http.server.netty)
    testImplementation(mn.micronaut.http.client)
    testImplementation(libs.managed.mockito.junit.jupiter)
    testImplementation(libs.managed.hamcrest)
    testImplementation(mnData.micronaut.data.tx)
    testImplementation(mnData.micronaut.data.hibernate.jpa)
    testImplementation(mn.snakeyaml)

    testRuntimeOnly(mnSql.micronaut.jdbc.tomcat)
    testRuntimeOnly(mnSql.h2)
    testRuntimeOnly(mnSerde.micronaut.serde.jackson)
    testRuntimeOnly(libs.junit.jupiter.engine)
}

graalvmNative {
    binaries {
        test {
            buildArgs.add('--initialize-at-run-time=io.micronaut.test.junit5.server.ExternalServerTest')
            resources.autodetect()
        }
    }
}

tasks.named("test") {
    systemProperty("mockito.test.enabled", "true")
}
