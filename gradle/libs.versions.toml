[versions]
micronaut = "4.2.3"
micronaut-platform = "4.2.3"
micronaut-docs = "2.0.0"
groovy = "4.0.15"

managed-assertj = "3.25.1"
managed-hamcrest = "2.2"
managed-mockito = "5.9.0"
managed-mockk = "1.13.9"
managed-junit = "5.10.1"
managed-rest-assured = "5.4.0"
managed-kotest = "5.8.0"
managed-spock = "2.3-groovy-4.0"

kotlin = "1.9.22"
graal-svm = "23.1.1"
testcontainers = "1.19.3"

micronaut-test = "4.1.1"
micronaut-data = "4.4.1"
micronaut-hibernate-validator = "4.1.0"
micronaut-logging = "1.1.2"
micronaut-r2dbc = "5.2.0"
micronaut-serde = "2.7.0"
micronaut-spring = "5.4.0"
micronaut-sql = "5.4.0"
micronaut-reactor = "3.2.1"

micronaut-gradle-plugin = "4.2.1"

[libraries]
# Core
micronaut-core = { module = 'io.micronaut:micronaut-core-bom', version.ref = 'micronaut' }
micronaut-platform = { module = 'io.micronaut.platform:micronaut-platform', version.ref = 'micronaut-platform' }

micronaut-data = { module = "io.micronaut.data:micronaut-data-bom", version.ref = "micronaut-data" }
micronaut-hibernate-validator = { module = "io.micronaut.beanvalidation:micronaut-hibernate-validator", version.ref = "micronaut-hibernate-validator" }
micronaut-r2dbc = { module = "io.micronaut.r2dbc:micronaut-r2dbc-bom", version.ref = "micronaut-r2dbc" }
micronaut-serde = { module = "io.micronaut.serde:micronaut-serde-bom", version.ref = "micronaut-serde" }
micronaut-spring = { module = "io.micronaut.spring:micronaut-spring-bom", version.ref = "micronaut-spring" }
micronaut-sql = { module = "io.micronaut.sql:micronaut-sql-bom", version.ref = "micronaut-sql" }
micronaut-reactor = { module = 'io.micronaut.reactor:micronaut-reactor-bom', version.ref = "micronaut-reactor" }
micronaut-test = { module = 'io.micronaut.test:micronaut-test-bom', version.ref = "micronaut-test" }

managed-assertj-core = { module = "org.assertj:assertj-core", version.ref = "managed-assertj" }
managed-hamcrest = { module = "org.hamcrest:hamcrest", version.ref = "managed-hamcrest" }
managed-mockito-core = { module = "org.mockito:mockito-core", version.ref = "managed-mockito" }
managed-mockito-junit-jupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "managed-mockito" }
managed-mockk = { module = "io.mockk:mockk", version.ref = "managed-mockk" }
# TODO kotest libs should stop be directly managed, boms-kotest should define the versions
managed-kotest-assertions-core-jvm = { module = "io.kotest:kotest-assertions-core-jvm", version.ref = "managed-kotest" }
managed-kotest-runner-junit5-jvm = { module = "io.kotest:kotest-runner-junit5-jvm", version.ref = "managed-kotest" }

# BOMs
boms-junit = { module = "org.junit:junit-bom", version.ref = "managed-junit" }
boms-kotest = { module = "io.kotest:kotest-bom", version.ref = "managed-kotest" }
boms-spock = { module = "org.spockframework:spock-bom", version.ref = "managed-spock" }
boms-rest-assured = { module = "io.rest-assured:rest-assured-bom", version.ref = "managed-rest-assured" }

micronaut-library-plugin = { module = "io.micronaut.library:io.micronaut.library.gradle.plugin", version.ref = "micronaut-gradle-plugin" }

graal-svm = { module = "org.graalvm.nativeimage:svm", version.ref = "graal-svm" }

spock-core = { module = "org.spockframework:spock-core" }
jakarta-inject-api = { module = "jakarta.inject:jakarta.inject-api" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "managed-junit" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "managed-junit" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "managed-junit" }
rest-assured = { module = "io.rest-assured:rest-assured" }
kotlin-stdlib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
groovy = { module = "org.apache.groovy:groovy" }

kotlin-gradle-plugin = { module = 'org.jetbrains.kotlin:kotlin-gradle-plugin', version.ref = 'kotlin' }

testcontainers-bom = { module = "org.testcontainers:testcontainers-bom", version.ref = "testcontainers" }
testcontainers = { module = "org.testcontainers:testcontainers" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql"}
